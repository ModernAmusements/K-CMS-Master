/* Raster v20 (release package) (rsms.me/raster) */
@import url("https://rsms.me/inter/inter.css");
@import url("https://rsms.me/res/fonts/iaw.css");
:root {
  --fontSize: 14px;
  --sansFont: "Inter";
  --monoFont: "iaw-mono";
  --lineHeight: calc(var(--fontSize) * 1.5);
  --baseline: calc(var(--lineHeight) / 2);
  --blockSpacingTop: 0px;
  --blockSpacingBottom: var(--lineHeight);
  --hrThickness: 2px;
  --h1-size: 2.8rem;
  --h2-size: 2.2rem;
  --h3-size: 1.4rem;
  --h4-size: 1.1rem;
  --columnGap: calc(var(--lineHeight) * 2);
  --rowGap: var(--lineHeight);
  --displayScale: 1;
  --pixel: 1px;
  --foreground-color-rgb: 0, 0, 0;
  --foreground-color-a: 1;
  --foreground-color: rgba(
    var(--foreground-color-rgb),
    var(--foreground-color-a)
  );
  --background-color: #fff;
}
@supports (font-variation-settings: normal) {
  :root {
    --sansFont: "Inter var";
    --monoFont: "iaw-mono-var";
  }
}
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
  only screen and (min-device-pixel-ratio: 1.5),
  only screen and (min-resolution: 1.5dppx) {
  :root {
    --displayScale: 2;
    --pixel: 0.5px;
  }
}
@media only screen and (-webkit-min-device-pixel-ratio: 2.5),
  only screen and (min-device-pixel-ratio: 2.5),
  only screen and (min-resolution: 2.5dppx) {
  :root {
    --displayScale: 3;
    --pixel: 0.34px;
  }
}
@media only screen and (-webkit-min-device-pixel-ratio: 3.5),
  only screen and (min-device-pixel-ratio: 3.5),
  only screen and (min-resolution: 3.5dppx) {
  :root {
    --displayScale: 4;
    --pixel: 0.25px;
  }
}
* {
  font: inherit;
  line-height: inherit;
}
a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
footer,
form,
grid,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
hr,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
main,
mark,
menu,
nav,
noscript,
object,
ol,
output,
p,
pre,
q,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}
blockquote,
q {
  quotes: none;
}
blockquote:after,
blockquote:before,
q:after,
q:before {
  content: "";
  content: none;
}
a,
a:active,
a:visited {
  color: inherit;
}


.grid {
  display: grid;
  grid-template-rows: min-content 1fr;
  grid-column-gap: var(--columnGap);
  grid-row-gap: var(--rowGap);

}

/* document */
html {
  font-family: var(--sansFont), -system-ui, system-ui, sans-serif;
  font-size: var(--fontSize);
  line-height: var(--lineHeight);
  background: var(--background-color);
  color: var(--foreground-color);
  letter-spacing: -0.01em;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -webkit-font-variant-ligatures: contextual common-ligatures;
          font-variant-ligatures: contextual common-ligatures;
  -webkit-font-feature-settings: "kern" 1, "liga" 1, "calt" 1, "cv10" 1;
          font-feature-settings: "kern" 1, "liga" 1, "calt" 1, "cv10" 1;
  /* G */
}

body {
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  overflow-x: hidden;
  padding: calc(var(--lineHeight) * 2);
  padding-bottom: calc(var(--lineHeight) * 3);
  
}

@media only screen and (max-width: 600px) {
  body {
    padding: var(--lineHeight);
    padding-bottom: calc(var(--lineHeight) * 2);
  }
}


/* HEADER
================================================== */


header menu {
  display: grid;
  grid-template-rows: min-content 1fr;
  grid-column-gap: var(--columnGap);
  grid-row-gap: var(--rowGap);

}

header {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  padding-top: calc(var(--lineHeight) * 1);
  background: white;
  z-index: 9;
}

header menu {
  grid-template-columns: 12fr 2fr 4fr 2fr;
  align-items: baseline;
}
header h1{
  display: grid;
  grid-template-columns: min-content 1fr;
  white-space: nowrap;
}




header h2,
header h3,
header span #sun  {
  margin-bottom: calc(var(--lineHeight)-10);
}

#sun {
  display: flex;
  justify-content: space-between;
}

header span #sun  {
  position: relative;
}

header span #sun,
header p {
  display: flex;
}






footer,
.content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: baseline;
      -ms-flex-align: baseline;
          align-items: baseline;
}
footer { 
  padding-top: calc(var(--lineHeight) * 2);
}
/* block */
address,
article,
aside,
blockquote,
dd,
dl,
dt,
fieldset,
form,
h1,
h2,
h3,
h4,
h5,
h6,
li,
nav,
ol,
p,
pre,
table,
tfoot,
ul,
video {
  margin-top: var(--blockSpacingTop);
  margin-bottom: var(--blockSpacingBottom);
}

/* first element has no top margin */
:first-child {
  margin-top: unset;
}

:last-child {
  margin-bottom: unset;
}

/* hr */
hr:first-child {
  margin-top: calc(var(--hrThickness) / -2);
  margin-bottom: calc(var(--lineHeight) - calc(var(--hrThickness) / 2));
}

hr:last-child {
  margin-top: calc(var(--lineHeight) - calc(var(--hrThickness) / 2));
  margin-bottom: calc(var(--hrThickness) / -2);
}

hr,
hr:only-child {
  border: none;
  background: var(--foreground-color);
  height: var(--hrThickness);
  margin-top: calc(var(--lineHeight) - calc(var(--hrThickness) / 2));
  margin-bottom: calc(var(--lineHeight) - calc(var(--hrThickness) / 2));
}

* + hr:last-child {
  /* hr following block has hrThickness removed from its top spacing */
  margin-top: calc(var(--hrThickness) / -2);
}

hr:not(:first-child) {
  /* note: collapses with preceeding block bottom margin */
  margin-top: var(--lineHeight);
  margin-bottom: calc(var(--lineHeight) - var(--hrThickness));
}


/* text style modifiers */
b,
strong,
.bold {
  font-weight: 600;
}

i,
em,
.italic {
  font-style: italic;
}

/* preformatted text */
pre,
code,
tt,
.code,
.monospace {
  font-family: var(--monoFont), Inconsolata, Menlo, monospace;
  font-weight: 430;
  word-wrap: break-word;
  white-space: pre-wrap;
}

/*pre { white-space: pre-wrap; }*/
/*code { white-space: nowrap; }*/
b pre,
b code,
b tt,
b .code,
b .monospace {
  font-weight: 600;
}

pre b,
code b,
tt b,
.code b,
.monospace b {
  font-weight: 600;
  font-weight: 580;
}

pre {
  white-space: pre;
  word-wrap: normal;
  overflow-x: auto;
  display: block;
}

pre code,
pre tt {
  white-space: pre;
  word-wrap: normal;
}

/* Save
================================================== */
/* SUN
================================================== */
.desktop .sun-active #sun:hover line{
	animation: none;
}
.desktop .sun-active #sun:hover svg path{
  	fill: #999;
  	animation: blinker-dark-sun .5s linear infinite;
}
/*
.sun-active .glow{
	animation: blinker .5s linear infinite;
}*/
.sun-active #loader,
.sun-active,
.sun-active header{
	background: black;
}
.sun-active menu,
.sun-active .type-row,
.sun-active #purchase-options form,
.sun-active #basket form .cart-item,
.sun-active .sky-pilot-item{
	border-bottom: 1px solid white;
}
.sun-active,
.sun-active a,
.desktop .sun-active #purchase-options form .product-select-wrap:hover select,
.desktop .sun-active #purchase-options form .product-select-wrap:hover::after,
.desktop .sun-active #purchase-options #mobile-select-product:hover::after,
.sun-active .type-row .editable[placeholder]:empty:before,
.desktop .sun-active #basket form .item-quantity-wrap:hover select,
.desktop .sun-active #basket form .item-quantity-wrap:hover::after,
.desktop .sun-active .sky-pilot-file-heading:hover,
.desktop .sun-active .sky-pilot-file-heading:hover::after {
	color: white;
}
.sun-active svg{
  	fill: white;
  	stroke: white !important;
}
.sun-active strong,
.sun-active #purchase-options form,
.sun-active #basket-wrap,
.sun-active #checkout-wrap .basket-totals,
.sun-active #basket form .cart-item,
.sun-active .sky-pilot-item{
	border-top: 1px solid white;
}
.sun-active #basket-button,
.sun-active #basket-button-exemptify,
.sun-active #basket-header .eu-vat{
	border: 1px solid white;
}
.desktop .sun-active #basket-button:hover,
.desktop .sun-active #basket-button-exemptify:hover{
	color: black;
  	background: white;
}
/*MS Track Styles*/
.sun-active input[type=range]::-ms-thumb{
	border: 1px solid white;
  	background: black;
}
.sun-active input[type=range]::-ms-thumb:active{
	cursor: grabbing;
  	background: white;
}
.sun-active input[type=range]::-ms-track,
.desktop .sun-active input[type=range]::-ms-thumb:hover{
  	background: white;
}
/*Firefox Track Styles*/
.sun-active input[type=range]::-moz-range-thumb{
	border: 1px solid white;
  	background: black;
}
.sun-active input[type=range]::-moz-range-thumb:active{
  	cursor: grabbing;
  	background: white;
}
.sun-active input[type=range]::-moz-range-track,
.desktop .sun-active input[type=range]::-moz-range-thumb:hover{
  	background: white;
}
/*Track Styles*/
.sun-active input[type=range]::-webkit-slider-thumb{
  	border: 1px solid white;
  	background: black;
}
.sun-active input[type=range]::-webkit-slider-thumb:active{
	cursor: grabbing;
  	background: white;
}
.sun-active input[type=range]::-webkit-slider-runnable-track,
.desktop .sun-active input[type=range]::-webkit-slider-thumb:hover{
	background: white;
}
.sun-active #basket form .cart-item,
.sun-active .sky-pilot-item{
	background: none;
}


svg{
	overflow: visible;
}




#sun-group .st0 {
    fill: none;
    stroke: #999;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 2px;
}

svg {

  	height: 1.5em;
  	margin-left: 0.5em;
}
span{
	line-height: normal;
}
#sun:hover line{
  	animation: blinker .5s linear infinite;
}



@font-face {
  font-family: "Inter.var";
  font-weight: 300 1000;
  font-style: oblique 0deg 14deg;
  src: url("/fonts/Inter.woff2") format("woff2"), url("/fonts/Inter.woff") format("woff"), url("/fonts/Inter.otf") format("truetype");
}

@font-face {
  font-family: "Modor";
  src: url("fonts/Modor-Regular/Modor-Regular.eot");
  src: url("fonts/Modor-Regular/Modor-Regular.eot?#iefix") format("embedded-opentype"), url("fonts/Modor-Regular/Modor-Regular.woff2") format("woff2"), url("fonts/Modor-Regular/Modor-Regular.woff") format("woff"), url("fonts/Modor-Regular/Modor-Regular.ttf") format("truetype"), url("fonts/Modor-Regular/Modor-Regular.svg#Modor-Regular") format("svg");
  font-weight: normal;
  font-style: normal;
}

/**
 * Typography
 */
h1,
.h1 {
  font-weight: 720;
  letter-spacing: -0.05em;
  font-size: var(--h1-size);
  line-height: calc(var(--lineHeight) * 2);
  margin-left: calc(var(--h1-size) / -22);
  margin-top: calc(var(--lineHeight) * 2);
  margin-bottom: var(--lineHeight);
  word-break: break-word;
}

h1.single-line {
  margin-top: var(--lineHeight);
  padding-top: calc(var(--lineHeight) * 0.5);
  padding-bottom: calc(var(--lineHeight) * 0.5);
}

h1.single-line:first-child {
  margin-top: 0;
  padding-bottom: calc(var(--lineHeight) * 0.5);
}

h2,
.h2 {
  font-weight: 500;
  letter-spacing: -0.03em;
  font-size: var(--h2-size);
  line-height: calc(var(--lineHeight) * 2);
  margin-left: calc(var(--h2-size) / -26);
  margin-bottom: var(--lineHeight);
}

* + h2,
h2.single-line {
  margin-top: var(--lineHeight);
  padding-top: calc(var(--lineHeight) * 0.5);
  padding-bottom: calc(var(--lineHeight) * 0.5);
  margin-bottom: 0;
}

h2.single-line:first-child {
  margin-top: unset;
}

h3,
.h3,
h4,
.h4 {
  font-weight: 500;
  letter-spacing: -0.02em;
  font-size: var(--h3-size);
}

h4,
.h4 {
  font-weight: 700;
  letter-spacing: -0.012em;
  font-size: var(--h4-size);
}

h3.single-line,
h4.single-line {
  padding-bottom: calc(var(--baseline) * 1.25);
  margin-bottom: 0;
}

h3 + h1,
h4 + h1,
h3 + h1.single-line,
h4 + h1.single-line {
  margin-top: calc(var(--baseline) * 3);
}

h3.single-line + h1.single-line,
h4.single-line + h1.single-line,
h3.single-line + h1,
h4.single-line + h1,
h3.single-line + h2.single-line,
h4.single-line + h2.single-line,
h3.single-line + h2,
h4.single-line + h2 {
  margin-top: var(--lineHeight);
}

h3 + h2,
h4 + h2,
h3 + h2.single-line,
h4 + h2.single-line {
  margin-top: var(--baseline);
}

h5,
h6,
.h5,
.h6 {
  font-weight: 670;
  letter-spacing: -0.015em;
  margin-bottom: 0;
}

/* large headers */
h1.large,
.h1.large {
  --h1-size: 4rem;
  line-height: calc(var(--lineHeight) * 3);
  font-weight: 730;
}

h1.xlarge,
.h1.xlarge {
  --h1-size: 5.5rem;
  line-height: calc(var(--lineHeight) * 4);
  font-weight: 740;
}

h1.xxlarge,
.h1.xxlarge {
  --h1-size: 7.5rem;
  line-height: calc(var(--lineHeight) * 5);
  font-weight: 750;
}

h1.xxxlarge,
.h1.xxxlarge {
  --h1-size: 10.5rem;
  line-height: calc(var(--lineHeight) * 7);
  font-weight: 760;
}

/* small text */
.small {
  font-size: 0.85rem;
  line-height: var(--lineHeight);
}
/* small text */
.medium {
  font-size: 0.99rem;
  line-height: var(--lineHeight);
} 

.xsmall {
  font-size: 0.8em;
  line-height: calc(var(--lineHeight) * 0.75);
  padding-top: calc(var(--lineHeight) * 0.25);
}

.xxsmall {
  font-size: 0.65em;
  line-height: calc(var(--lineHeight) * 0.7);
  padding-top: calc(var(--lineHeight) * 0.3);
}

.xxxsmall {
  font-size: 0.5em;
  line-height: calc(var(--lineHeight) * 0.5);
  padding-bottom: calc(var(--lineHeight) * 0.25);
}

p,
.p {
  font-size: 1em;
  font-weight: 500;
}

/* anchor */
a {
  /* text-decoration: underline;
  -webkit-text-decoration: underline rgba(0, 0, 0, 0.3);
  text-decoration: underline rgba(0, 0, 0, 0.3);
  white-space: nowrap; */
}

a:hover {
  color: var(--blue);
}

h1 > a,
h2 > a,
h3 > a,
h4 > a,
h5 > a,
h6 > a,
.h1 > a,
.h2 > a,
.h3 > a,
.h4 > a,
.h5 > a,
.h6 > a {
  text-decoration: none;
}

h1 > a:hover,
h2 > a:hover,
h3 > a:hover,
h4 > a:hover,
h5 > a:hover,
h6 > a:hover,
.h1 > a:hover,
.h2 > a:hover,
.h3 > a:hover,
.h4 > a:hover,
.h5 > a:hover,
.h6 > a:hover {
  text-decoration: underline;
  -webkit-text-decoration: underline rgba(0, 0, 0, 0.3);
  text-decoration: underline rgba(0, 0, 0, 0.3);
  color: inherit;
}


/* image */
img,
img:first-child,
img:last-child {
  display: block;
  margin-top: var(--baseline);
  margin-bottom: var(--baseline);
}

img:only-child {
  margin: 0;
}

* + img {
  margin-top: calc(var(--baseline) * -1);
}

img.fill,
img.cover {
  -o-object-fit: cover;
  object-fit: cover;
}


/* list */
li {
  margin-left: .2em;
  margin-bottom: var(--baseline);
}

li > p + ul,
li > p + ol {
  /* <ul>|<ol> inside <li> that directly follows a <p> */
  /* shave off 1 baseline from space in between paragraph and list */
  margin-top: calc(var(--baseline) * -1);
}

li.task-list-item {
  list-style-type: none;
}

li.task-list-item > input[type=checkbox] {
  list-style: none;
  margin-right: 0.5em;
  margin-left: -1.4em;
  background: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 1.5em;
  height: var(--baseline);
  display: inline-block;
  position: relative;
  border: none;
  opacity: 1;
  --outlineSvgUrl: url('data:image/svg+xml;utf8,<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="1.75" y="1.75" width="14.5" height="14.5" rx="0.5" stroke="black" stroke-width="1.5"/></svg>');
  --checkSvgUrl: url('data:image/svg+xml;utf8,<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.7 9.3L8.1 12.6L13.8 6.9L12.3 5.3L8.1 9.5L6.3 7.7L4.7 9.3Z" fill="black"/></svg>');
}

li.task-list-item > input[type=checkbox]:before,
li.task-list-item > input[type=checkbox]:after {
  display: block;
  position: absolute;
  content: "X";
  color: transparent;
  left: 0;
  top: -0.25em;
  bottom: -0.25em;
  width: 1.1em;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
  --webkit-touch-callout: none;
}

li.task-list-item > input[type=checkbox]:after {
  /* box aligned with checkmark */
  background-image: var(--outlineSvgUrl);
}

li.task-list-item > input[type=checkbox][checked]:before {
  /* checkmark aligned with box */
  background-image: var(--checkSvgUrl);
}

@supports ((-webkit-mask-image: linear-gradient(black, red)) or (mask-image: linear-gradient(black, red))) {
  /* use mask so that check boxes matemplateColumnshes --foreground-color */
  li.task-list-item > input[type=checkbox]:before,
  li.task-list-item > input[type=checkbox]:after {
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center center;
    mask-position: center center;
  }
  li.task-list-item > input[type=checkbox]:after {
    /* box aligned with checkmark */
    background: var(--foreground-color);
    -webkit-mask-image: var(--outlineSvgUrl);
    mask-image: var(--outlineSvgUrl);
  }
  li.task-list-item > input[type=checkbox][checked]:before {
    /* checkmark aligned with box */
    background: var(--foreground-color);
    -webkit-mask-image: var(--checkSvgUrl);
    mask-image: var(--checkSvgUrl);
  }
}

.compact > li > p + ul,
.compact > li > p + ol {
  /* like above but for lists inside compact lists */
  margin-top: calc(var(--blockSpacingBottom) * -1);
}

ul,
ol {
  list-style-position: outside;
  --list-indentation: 2em;
}

ul.compact > li,
ol.compact > li {
  margin-bottom: 0;
}

ul {
  padding-left: 1.3em;
}

/* custom start number -- undo reset */
ol[start] {
  -webkit-padding-start: var(--list-indentation);
  padding-inline-start: var(--list-indentation);
  /*list-style-position: inside;*/
  /*& li {
    color: red;
  }*/
}

ol:not([start]) {
  list-style: none;
  counter-reset: ol-counter;
  padding-left: var(--list-indentation);
}

ol:not([start]) > li {
  counter-increment: ol-counter;
  position: relative;
}

ol:not([start]) > li::before {
  content: counter(ol-counter) ". ";
  font-weight: 500;
  font-variant-numeric: tabular-nums;
  position: absolute;
  --space: 0.5em;
  --width: calc(var(--list-indentation) - var(--space));
  left: calc(-1 * calc(var(--width) + var(--space)));
  width: var(--width);
  height: var(--lineHeight);
  text-align: left;
}

.single-line {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.block {
  display: block;
}
.inline {
  display: inline-block;
}
.flex-h {
  -webkit-box-orient: horizontal;
  flex-direction: row;
}
.flex-h,
.flex-v {
  display: -webkit-box;
  display: flex;
  -webkit-box-direction: normal;
}
.flex-v {
  -webkit-box-orient: vertical;
  flex-direction: column;
}
.left {
  /*! text-align: left; */
}
.right {
  text-align: right;
}
.center {
  text-align: center;
}
.flex-v.center {
  align-self: center;
}
.flex-h .bottom {
  align-self: flex-end;
}

hr {
  height: 2px;
  margin-top: calc(var(--lineHeight) * 0.2);
}

/* Typo Controls */
/*---------------------------------------------------------------------------------------------------*/
.controls {
  font-weight: 450;
}

#singleFile .controls {
  width: 100%;
  overflow: hidden !important;
  display: -ms-grid;
  display: grid;
  line-height: 2em;
}

.test {
  width: 100%;
  font-size: 200pt;
  line-height: 200pt;
  letter-spacing: -20pt;
  min-height: 30px;
  background-color: transparent;
  height: auto;
  outline: none;
  border: none;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  word-break: break-word;
  white-space: normal;
}

.input {
  font-size: var(--fontSize);
  line-height: var(--lineHeight);
  background: var(--background-color);
  color: var(--foreground-color);
}

#singleFile .ccs-row {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 196px 196px auto;
      grid-template-columns: 196px 196px auto;
}

#singleFile input[type="text"] {
  font-size: 230px;
  font-weight: 800;
  border: 0px;
  height: 375px;
  font-weight: 800;
  font-variation-settings: "MONO" 1, "CASL" 0, "slnt" 0, "CRSV" 0, "wght" 800;
  text-align: center;
  width: 100%;
}

#singleFile input[type="text"]:focus {
  outline: none;
}

#singleFile input[type="range"] {
  -webkit-appearance: none;
  margin: calc(1em - var(--thumbTouchHeight) / 2);
  margin-left: calc(-1 * var(--thumbTouchHeight) / 2);
  margin-right: calc(-1 * var(--thumbTouchHeight) / 2);
  width: calc(100% + var(--thumbTouchHeight) / 2);
  max-width: 400px;
  background: transparent;
}

#singleFile input[type="range"]:focus {
  outline: none;
  color: transparent;
  text-shadow: 0 0 0 #000;
}

#singleFile input[type="range"]::-webkit-slider-runnable-track {
  width: 100%;
  height: var(--trackHeight);
  cursor: pointer;
  background: transparent;
  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(transparent), color-stop(var(--trackBg)), color-stop(50%, var(--trackBg)), color-stop(50%, transparent)), -webkit-gradient(linear, right top, left top, from(transparent), color-stop(transparent), color-stop(var(--trackBg)), color-stop(50%, var(--trackBg)), color-stop(50%, transparent));
  background-image: linear-gradient(to right, transparent, transparent calc(var(--thumbTouchHeight) / 2), var(--trackBg) calc(var(--thumbTouchHeight) / 2), var(--trackBg) 50%, transparent 50%), linear-gradient(to left, transparent, transparent calc(var(--thumbTouchHeight) / 2), var(--trackBg) calc(var(--thumbTouchHeight) / 2), var(--trackBg) 50%, transparent 50%);
  border-radius: 1px;
}

#singleFile input[type="range"]:focus::-webkit-slider-runnable-track {
  outline: none;
  background-image: -webkit-gradient(linear, left top, right top, from(transparent), color-stop(transparent), color-stop(var(--trackFocus)), color-stop(50%, var(--trackFocus)), color-stop(50%, transparent)), -webkit-gradient(linear, right top, left top, from(transparent), color-stop(transparent), color-stop(var(--trackFocus)), color-stop(50%, var(--trackFocus)), color-stop(50%, transparent));
  background-image: linear-gradient(to right, transparent, transparent calc(var(--thumbTouchHeight) / 2), var(--trackFocus) calc(var(--thumbTouchHeight) / 2), var(--trackFocus) 50%, transparent 50%), linear-gradient(to left, transparent, transparent calc(var(--thumbTouchHeight) / 2), var(--trackFocus) calc(var(--thumbTouchHeight) / 2), var(--trackFocus) 50%, transparent 50%);
}

#singleFile input[type="range"]::-webkit-slider-thumb {
  height: var(--thumbTouchHeight);
  width: var(--thumbTouchHeight);
  border-radius: var(--thumbTouchHeight);
  border: none;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: calc( -1 * (var(--thumbTouchHeight) / 2) + (var(--trackHeight) / 2));
  background: none;
  background-image: radial-gradient(var(--thumbBg) calc(var(--thumbHeight) / 2), transparent calc(var(--thumbHeight) / 2), transparent);
}

#singleFile input[type="range"]::-moz-range-track {
  width: 100%;
  height: var(--trackHeight);
  border-radius: 1px;
  cursor: pointer;
  background-color: red;
  background-image: linear-gradient(to right, var(--sliderComponentBg), var(--sliderComponentBg) 20px, var(--trackBg) 20px, var(--trackBg) 50%, transparent 50%), linear-gradient(to left, var(--sliderComponentBg), var(--sliderComponentBg) 20px, var(--trackBg) 20px, var(--trackBg) 50%, transparent 50%);
}

#singleFile input[type="range"]:focus::-moz-range-track {
  background-image: linear-gradient(to right, var(--sliderComponentBg), var(--sliderComponentBg) 20px, var(--trackFocus) 20px, var(--trackFocus) 50%, transparent 50%), linear-gradient(to left, var(--sliderComponentBg), var(--sliderComponentBg) 20px, var(--trackFocus) 20px, var(--trackFocus) 50%, transparent 50%);
}

#singleFile input[type="range"]::-moz-focus-outer {
  border: 0;
}

#singleFile input[type="range"]::-moz-range-thumb {
  height: var(--thumbTouchHeight);
  width: var(--thumbTouchHeight);
  border: none;
  border-radius: var(--thumbTouchHeight);
  background: none;
  background-image: radial-gradient(var(--thumbBg) calc(var(--thumbHeight) / 2), transparent calc(var(--thumbHeight) / 2), transparent);
  cursor: pointer;
}

#singleFile input[type="range"]::-ms-track {
  width: calc(100%- var(--thumbTouchHeight));
  margin-left: calc(var(--thumbTouchHeight) / 2);
  height: var(--trackHeight);
  cursor: pointer;
}

#singleFile input[type="range"]::-ms-fill-lower {
  background-color: #777;
}

#singleFile input[type="range"]::-ms-fill-upper {
  background: #777;
}

#singleFile input[type="range"]::-ms-thumb {
  width: var(--thumbHeight);
  margin-left: calc(var(--thumbTouchHeight) / 2);
  margin-right: calc(var(--thumbTouchHeight) / 2);
  border-radius: 999px;
  background-color: #222;
  cursor: pointer;
}

/* TYPEVIEWER*/
/*---------------------------------------------------------------------------------------------------*/
input {
  overflow: visible;
}

[hidden] {
  display: none !important;
}

.d-none {
  display: none !important;
}

.d-inline-block {
  display: inline-block !important;
}

@media (min-width: 768px) {
  .d-md-none {
    display: none !important;
  }
  .d-md-inline {
    display: inline !important;
  }
  .d-md-block {
    display: block !important;
  }
}

.visible {
  visibility: visible !important;
}

#singleFile * {
  overflow: visible !important;
}

#singleFile input[type="text"] {
  font-size: 230px;
  font-weight: 800;
  border: 0px;
  height: 375px;
  font-weight: 800;
  font-variation-settings: "MONO" 1, "CASL" 0, "slnt" 0, "CRSV" 0, "wght" 800;
  text-align: center;
  width: 100%;
}

#singleFile input[type="range"]:focus::-ms-fill-lower {
  background: blue;
}

#singleFile input[type="range"]:focus::-ms-fill-upper {
  background: blue;
}

#singleFile .controls .css {
  width: 200px;
}

#singleFile .controls .css,
#singleFile .controls .inputs {
  display: inline-block;
}

#singleFile .controls .inputs {
  position: relative;
  top: -4px;
  margin-right: 40px;
}

#singleFile .controls .radio {
  border: 1px solid #bdbdbd;
  width: 12px;
  height: 12px;
  border-radius: 12px;
  display: inline-block;
  cursor: pointer;
}

#singleFile .controls .radio.active {
  background-color: #bdbdbd;
}

#singleFile .controls ul {
  list-style-type: none;
}

#singleFile .controls span.comment:not(.not-aligned) {
  position: absolute;
  left: 500px;
}

#singleFile .controls span.comment {
  color: #858585;
}
/*# sourceMappingURL=main.css.map */